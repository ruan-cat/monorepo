name: Release

env:
  # https://turborepo.com/docs/crafting-your-repository/constructing-ci#enabling-remote-caching
  # https://vercel.com/docs/monorepos/remote-caching#use-remote-caching-from-external-ci/cd
  TURBO_TOKEN: ${{ secrets.vercel_token }}
  TURBO_TEAM: "ruancat-projects"

permissions: write-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 安装pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: |
            - recursive: true
            - args: [--global, "vercel", "@dotenvx/dotenvx", "tsx", "turbo", "npm"]

      - name: 安装node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: pnpm
          registry-url: "https://registry.npmjs.org"

      - name: corepack手动再安装一次pnpm
        run: corepack enable && corepack install

      - name: 安装整个项目的依赖
        run: pnpm i

      - name: turbo login 远程登录
        run: turbo login --token=${{env.TURBO_TOKEN}} --team=${{env.TURBO_TEAM}}

      - name: turbo link 链接远程项目
        run: turbo link --token=${{env.TURBO_TOKEN}} --scope=${{env.TURBO_TEAM}} --yes

      - name: 构建项目
        run: pnpm run build

      - name: 构建并发版
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
          version: pnpm run version
          commit: "📢 publish: release package(s)"
          title: "📢 publish: release package(s)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 同步GitHub Release
        if: steps.changesets.outputs.published == 'true'
        run: tsx scripts/sync-github-release.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PUBLISHED_PACKAGES: ${{ toJson(steps.changesets.outputs.publishedPackages) }}

      - name: 触发部署工作流
        if: steps.changesets.outputs.published == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: deploy-after-release
          client-payload: |
            {
              "published": true,
              "publishedPackages": ${{ toJson(steps.changesets.outputs.publishedPackages) }},
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}"
            }
